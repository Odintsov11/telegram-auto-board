'use client'

import { useState, useEffect } from 'react'
import { useRouter } from 'next/navigation'
import { Button } from '@/components/ui/Button'

interface PaymentData {
  adData: any
  tariff: {
    id: string
    name: string
    price: number
    duration: string
  }
}

export default function PaymentPage() {
  const router = useRouter()
  const [paymentData, setPaymentData] = useState<PaymentData | null>(null)
  const [isProcessing, setIsProcessing] = useState(false)
  const [paymentMethod, setPaymentMethod] = useState<'card' | 'sbp'>('card')

  useEffect(() => {
    const savedData = localStorage.getItem('paymentData')
    if (!savedData) {
      router.push('/create')
      return
    }
    setPaymentData(JSON.parse(savedData))
  }, [router])

  const handlePayment = async () => {
    if (!paymentData) return

    setIsProcessing(true)

    try {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –Ø–Ω–¥–µ–∫—Å.–ö–∞—Å—Å–æ–π
      // –ü–æ–∫–∞ –∏–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ–ø–ª–∞—Ç—É
      await new Promise(resolve => setTimeout(resolve, 2000))

      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
      const tg = window.Telegram?.WebApp
      const tgUser = tg?.initDataUnsafe?.user

      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
      const adId = Date.now().toString()
      const publishData = {
        id: adId,
        ...paymentData.adData,
        tariff: paymentData.tariff,
        userId: tgUser?.id,
        userName: tgUser?.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        initData: tg?.initData || ''
      }

      // –ü—É–±–ª–∏–∫—É–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª —á–µ—Ä–µ–∑ Next.js API route
      console.log('Publishing ad with data:', publishData)
      
      const response = await fetch('/api/ads/publish', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(publishData)
      })

      console.log('Response status:', response.status)
      const result = await response.json()
      console.log('Response result:', result)

      if (!result.success) {
        throw new Error(result.error || result.details || 'Failed to publish ad')
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID —Å–æ–æ–±—â–µ–Ω–∏—è
      const existingAds = JSON.parse(localStorage.getItem('userAds') || '[]')
      const newAd = {
        id: adId,
        ...paymentData.adData,
        tariff: paymentData.tariff,
        status: 'published',
        publishedAt: new Date().toISOString(),
        messageId: result.messageId, // ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ
        views: 0,
        contacts: 0,
        expiresAt: calculateExpirationDate(paymentData.tariff.id)
      }
      
      existingAds.push(newAd)
      localStorage.setItem('userAds', JSON.stringify(existingAds))

      // –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      localStorage.removeItem('adData')
      localStorage.removeItem('paymentData')

      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —É—Å–ø–µ—à–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
      router.push(`/success?id=${adId}`)

    } catch (error) {
      console.error('Payment/Publication error:', error)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
      setIsProcessing(false)
    }
  }

  const calculateExpirationDate = (tariffId: string): string => {
    const now = new Date()
    switch (tariffId) {
      case 'premium_1':
        return new Date(now.getTime() + 24 * 60 * 60 * 1000).toISOString()
      case 'premium_3':
        return new Date(now.getTime() + 3 * 24 * 60 * 60 * 1000).toISOString()
      case 'premium_7':
        return new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000).toISOString()
      case 'vip':
        return new Date(now.getTime() + 30 * 24 * 60 * 60 * 1000).toISOString()
      default:
        return new Date(now.getTime() + 30 * 24 * 60 * 60 * 1000).toISOString()
    }
  }

  if (!paymentData) {
    return (
      <div className="container mx-auto px-4 py-6 max-w-md">
        <div className="text-center">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      </div>
    )
  }

  return (
    <div className="container mx-auto px-4 py-6 max-w-md">
      <div className="mb-6">
        <button 
          onClick={() => router.back()}
          className="text-blue-500 text-sm mb-2"
          disabled={isProcessing}
        >
          ‚Üê –ù–∞–∑–∞–¥
        </button>
        <h1 className="text-xl font-bold">–û–ø–ª–∞—Ç–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</h1>
      </div>

      {/* –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ */}
      <div className="bg-white rounded-lg shadow p-4 mb-6">
        <h3 className="font-semibold mb-3">–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞</h3>
        
        <div className="space-y-2 mb-4">
          <div className="flex justify-between">
            <span>–ê–≤—Ç–æ–º–æ–±–∏–ª—å:</span>
            <span className="font-medium">
              {paymentData.adData.brand} {paymentData.adData.model}
            </span>
          </div>
          <div className="flex justify-between">
            <span>–¢–∞—Ä–∏—Ñ:</span>
            <span className="font-medium">{paymentData.tariff.name}</span>
          </div>
          <div className="flex justify-between">
            <span>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</span>
            <span>{paymentData.tariff.duration}</span>
          </div>
        </div>
        
        <div className="border-t pt-3">
          <div className="flex justify-between text-lg font-bold">
            <span>–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ:</span>
            <span className="text-blue-600">
              {paymentData.tariff.price.toLocaleString()} ‚ÇΩ
            </span>
          </div>
        </div>
      </div>

      {/* –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã */}
      <div className="bg-white rounded-lg shadow p-4 mb-6">
        <h3 className="font-semibold mb-4">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</h3>
        
        <div className="space-y-3">
          <label className="flex items-center p-3 border rounded-lg cursor-pointer hover:bg-gray-50">
            <input
              type="radio"
              name="paymentMethod"
              value="card"
              checked={paymentMethod === 'card'}
              onChange={(e) => setPaymentMethod(e.target.value as 'card')}
              className="mr-3"
            />
            <div className="flex items-center">
              <span className="text-2xl mr-3">üí≥</span>
              <div>
                <div className="font-medium">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</div>
                <div className="text-sm text-gray-500">Visa, MasterCard, –ú–ò–†</div>
              </div>
            </div>
          </label>

          <label className="flex items-center p-3 border rounded-lg cursor-pointer hover:bg-gray-50">
            <input
              type="radio"
              name="paymentMethod"
              value="sbp"
              checked={paymentMethod === 'sbp'}
              onChange={(e) => setPaymentMethod(e.target.value as 'sbp')}
              className="mr-3"
            />
            <div className="flex items-center">
              <span className="text-2xl mr-3">üì±</span>
              <div>
                <div className="font-medium">–°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π</div>
                <div className="text-sm text-gray-500">–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –°–ë–ü</div>
              </div>
            </div>
          </label>
        </div>
      </div>

      {/* –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å */}
      <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-6">
        <div className="flex items-center mb-2">
          <span className="text-green-500 text-xl mr-2">üîí</span>
          <span className="font-medium text-green-800">–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞</span>
        </div>
        <p className="text-sm text-green-700">
          –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –∑–∞—â–∏—â–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Å—Å—ã. 
          –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞ –Ω–∞—à–∏—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö.
        </p>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã */}
      <Button
        onClick={handlePayment}
        disabled={isProcessing}
        className={`w-full py-3 rounded-lg text-lg font-semibold transition-colors ${
          isProcessing 
            ? 'bg-gray-400 cursor-not-allowed' 
            : 'bg-green-500 hover:bg-green-600 text-white'
        }`}
      >
        {isProcessing ? (
          <div className="flex items-center justify-center">
            <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2"></div>
            –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞...
          </div>
        ) : (
          `–û–ø–ª–∞—Ç–∏—Ç—å ${paymentData.tariff.price.toLocaleString()} ‚ÇΩ`
        )}
      </Button>

      {/* –£—Å–ª–æ–≤–∏—è */}
      <div className="mt-4 text-center">
        <p className="text-xs text-gray-500">
          –ù–∞–∂–∏–º–∞—è "–û–ø–ª–∞—Ç–∏—Ç—å", –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å{' '}
          <a href="#" className="text-blue-500 underline">—É—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</a>
          {' '}–∏{' '}
          <a href="#" className="text-blue-500 underline">–ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</a>
        </p>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ */}
      <div className="mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
        <div className="flex items-center mb-2">
          <span className="text-blue-500 text-xl mr-2">‚ÑπÔ∏è</span>
          <span className="font-medium text-blue-800">–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã?</span>
        </div>
        <ul className="text-sm text-blue-700 space-y-1">
          <li>‚Ä¢ –û–±—ä—è–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è –≤ –∫–∞–Ω–∞–ª–µ</li>
          <li>‚Ä¢ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞</li>
          <li>‚Ä¢ –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —É—Å–ø–µ—à–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</li>
          <li>‚Ä¢ –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ "–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è"</li>
        </ul>
      </div>
    </div>
  )
}